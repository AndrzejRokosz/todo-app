{"version":3,"sources":["App.js","index.js"],"names":["API_URL","App","state","tasks","taskName","handleChange","event","_this","setState","target","value","addTask","newTask","completed","fetch","concat","method","body","JSON","stringify","then","response","json","data","id","name","push","handleClick","loadData","taskList","Object","entries","map","_ref","_ref2","slicedToArray","values","console","log","componentWillMount","handleKeyDown","keyDown","keyCode","handleDelete","handleCheck","task","_this2","this","react_default","a","createElement","className","TextField_default","onChange","onKeyDown","fullWidth","floatingLabelText","RaisedButton_default","label","primary","onClick","List","key","primaryText","leftCheckbox","Checkbox_default","defaultChecked","onCheck","rightIconButton","IconButton_default","delete_default","Component","ReactDOM","render","MuiThemeProvider_default","src_App","document","getElementById"],"mappings":"kTAQMA,EAAU,sCAyIDC,6MArIbC,MAAQ,CACNC,MAAO,GACPC,SAAU,MAEZC,aAAe,SAACC,GACdC,EAAKC,SAAS,CAAEJ,SAAUE,EAAMG,OAAOC,WAGzCC,QAAU,WACR,GAA4B,KAAxBJ,EAAKL,MAAME,SAAiB,CAC9B,IAAID,EAAQI,EAAKL,MAAMC,MACnBS,EAAU,CAAER,SAAUG,EAAKL,MAAME,SAAUS,WAAW,GAC1DC,MAAK,GAAAC,OAAIf,EAAJ,eAA0B,CAC7BgB,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,KAEpBQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GACLX,EAAQY,GAAKD,EAAKE,KAClBtB,EAAMuB,KAAKd,GACXL,EAAKC,SAAS,CAAEL,QAAOC,SAAU,WAMzCuB,YAAc,WACZpB,EAAKI,aAGPiB,SAAW,WACTd,MAAK,GAAAC,OAAIf,EAAJ,gBACFoB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,GAAKA,EAAL,CAKA,IACMM,EADQC,OAAOC,QAAQR,GACNS,IAAI,SAAAC,GAAkB,IAAAC,EAAAJ,OAAAK,EAAA,EAAAL,CAAAG,EAAA,GAAhBT,EAAgBU,EAAA,GAAZE,EAAYF,EAAA,GAE3C,OADAE,EAAOZ,GAAKA,EACLY,IAET7B,EAAKC,SAAS,CAAEL,MAAO0B,IACvBQ,QAAQC,IAAI,OAAQT,QAVlBtB,EAAKC,SAAS,CAAEL,MAAO,UAc/BoC,mBAAqB,WACnBhC,EAAKqB,cAGPY,cAAgB,SAAAlC,GACd+B,QAAQC,IAAIhC,EAAMmC,SACI,KAAlBnC,EAAMoC,SACRnC,EAAKI,aAITgC,aAAe,SAACnB,GACdV,MAAK,GAAAC,OAAIf,EAAJ,WAAAe,OAAqBS,EAArB,SAAgC,CACnCR,OAAQ,WAEPI,KAAK,WACJb,EAAKqB,gBAGXgB,YAAc,SAACC,GAObA,EAAKhC,WAAagC,EAAKhC,UACvBC,MAAK,GAAAC,OAAIf,EAAJ,WAAAe,OAAqB8B,EAAKrB,GAA1B,SAAqC,CACxCR,OAAQ,QACRC,KAAMC,KAAKC,UAAU0B,KAEtBzB,KAAK,WACJb,EAAKqB,sFAOA,IAAAkB,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,SAAUN,KAAK1C,aACfiD,UAAWP,KAAKP,cAChB9B,MAAOqC,KAAK7C,MAAME,SAClBmD,WAAW,EACXC,kBAAkB,yBAGpBR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACES,MAAM,MACNC,SAAS,EACTJ,WAAW,EACXK,QAASb,KAAKpB,eAIlBqB,EAAAC,EAAAC,cAACW,EAAA,KAAD,KACGd,KAAK7C,MAAMC,MAAM6B,IAAI,SAAAa,GAAI,OACxBG,EAAAC,EAAAC,cAACW,EAAA,SAAD,CACEC,IAAKjB,EAAKrB,GACVuC,YAAalB,EAAKzC,SAClB4D,aACAhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,eAAgBrB,EAAKhC,UACpBsD,QAAS,kBAAMrB,EAAKF,YAAYC,MAEnCuB,gBACEpB,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACED,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAYW,QAAS,kBAAMd,EAAKH,aAAaE,EAAKrB,qBA1HlD+C,8BCLlBC,IAASC,OACLzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAD,OAIJC,SAASC,eAAe","file":"static/js/main.b7ec2a28.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { List, ListItem } from 'material-ui/List';\nimport Checkbox from 'material-ui/Checkbox';\nimport DeleteIcon from 'material-ui/svg-icons/action/delete';\nimport IconButton from 'material-ui/IconButton';\n\nconst API_URL = 'https://moj-firebase.firebaseio.com'\n\n\nclass App extends Component {\n  state = {\n    tasks: [],\n    taskName: ''//searched taskName\n  }\n  handleChange = (event) => {\n    this.setState({ taskName: event.target.value })\n  }\n\n  addTask = () => {\n    if (this.state.taskName !== '') {\n      let tasks = this.state.tasks\n      let newTask = { taskName: this.state.taskName, completed: false }\n      fetch(`${API_URL}/tasks.json`, {\n        method: 'POST',\n        body: JSON.stringify(newTask)\n      })\n        .then(response => response.json())\n        .then((data) => {\n          newTask.id = data.name\n          tasks.push(newTask)\n          this.setState({ tasks, taskName: '' })\n        })\n\n    }\n  }\n\n  handleClick = () => {///add to database\n    this.addTask()\n  }\n\n  loadData = () => {\n    fetch(`${API_URL}/tasks.json`)\n      .then(response => response.json())\n      .then(data => {\n        if (!data) {\n          this.setState({ tasks: [] })\n          ////zabezpieczenie w przypadku pustej bazy danych\n          return\n        }\n        const array = Object.entries(data)//zamiana na tablice index=1 klucz=0\n        const taskList = array.map(([id, values]) => {\n          values.id = id //nowa wlasciwosc w obiekcie zadania\n          return values\n        })\n        this.setState({ tasks: taskList })\n        console.log('data', taskList)\n      })\n  }\n\n  componentWillMount = () => {  //// read from database\n    this.loadData()\n  }\n\n  handleKeyDown = event => { /// add task on enter hit \n    console.log(event.keyDown)\n    if (event.keyCode === 13) {\n      this.addTask()\n    }\n  }\n\n  handleDelete = (id) => {\n    fetch(`${API_URL}/tasks/${id}.json`, {\n      method: 'DELETE'\n    })\n      .then(() => {\n        this.loadData()\n      })\n  }\n  handleCheck = (task) => {\n    // task.completed = !task.completed\n    // fetch(`${API_URL}/tasks/${task.id}.json`, {\n    //   method: 'PUT',\n    //   body: JSON.stringify(task)\n    // })\n\n    task.completed = !task.completed\n    fetch(`${API_URL}/tasks/${task.id}.json`, {\n      method: 'PATCH',\n      body: JSON.stringify(task)\n    })\n    .then(() => {\n      this.loadData()\n    })\n\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <div>\n          <TextField\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n            value={this.state.taskName}\n            fullWidth={true}\n            floatingLabelText=\"Enter your task here\"\n          />\n\n          <RaisedButton\n            label=\"Add\"\n            primary={true}\n            fullWidth={true}\n            onClick={this.handleClick}\n          />\n        </div>\n\n        <List>\n          {this.state.tasks.map(task => (\n            <ListItem\n              key={task.id}\n              primaryText={task.taskName}\n              leftCheckbox={\n              <Checkbox\n                defaultChecked={task.completed}\n                 onCheck={() => this.handleCheck(task)}\n                  />}\n              rightIconButton={\n                <IconButton>\n                  <DeleteIcon onClick={() => this.handleDelete(task.id)} />\n                </IconButton>\n              }\n            />\n          ))}\n        </List>\n\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\nReactDOM.render(\n    <MuiThemeProvider>\n        <App />\n    </MuiThemeProvider>,\n\n\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}